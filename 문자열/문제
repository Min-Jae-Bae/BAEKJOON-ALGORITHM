// 11654번 //
import java.util.Scanner;

/**
 * Main1
 */
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int num = sc.nextLine().charAt(0); // 문자열을 잘라 문자에 대응되는 값, 즉 아스키 코드값을 저장

        System.out.println(num);

        /// int 타입 변수에 저장함으로싸 문자에 대응되는 값, 아스키 코드 값을 저장
    }
}

// 11720번 //

import java.util.Scanner;
 
public class Main {
	public static void main(String[] args) {		
		Scanner in = new Scanner(System.in);
 
		int N = in.nextInt();
		String a = in.next();
		in.close();
		
		int sum = 0;
        
		for(int i = 0; i < N; i++) {
			sum += a.charAt(i)-'0';
		}
		System.out.print(sum);
	}
}


// 10809번 //
import java.util.Scanner;

/**
 * 1 부터 10000까지의 검사한 뒤, 해당 수를 생성자로 하는 수가 있으면 그 수를 거르는 것
 * 
 */
public class Main1 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] arr = new int[26]; // 배열 26인 배열을 생성

        for (int i = 0; i < arr.length; i++) { /// arr의 배열의 인덱스를 다 -1로 초기화 시킨다.
            arr[i] = -1;
        }

        String S = sc.nextLine(); // 문자열을 하나 받는다.

        for (int i = 0; i < S.length(); i++) { // 받은 문자열 만큼 ch에 넣는다. 하나씩
            char ch = S.charAt(i);

            if (arr[ch - 'a'] == -1) {      // 중복 숫자는 처음나타난 위치로 나타낸다.
                arr[ch - 'a'] = i;
            }
        }
        for (int val : arr) {
            System.out.println(val + " ");

        }
    }
}
// 2908번 //

import java.util.Scanner;

/**
 * Main1
 */
public class Main1 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();

        A = Integer.parseInt(new StringBuilder().append(A).reverse().toString());
        B = Integer.parseInt(new StringBuilder().append(B).reverse().toString()); /// 스트링빌더로 B를 추가하고 앞뒤로 바꾸고 문자열로 바꾼다음 그것을 정수로 바꿔서 비교

        System.out.println(A > B ? A : B); /// A가 B보다 클때 A를 출력하고 아니면 B를 출력한다.
    }
}

// 10809번 //
import java.util.Scanner;
 
public class Main {
 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
 
 
		int[] arr = new int[26];
		
		for(int i = 0; i < arr.length; i++) {
			arr[i] = -1;
		}
 
		String S = in.nextLine();
 
		for(int i = 0; i < S.length(); i++) {
			char ch = S.charAt(i);
    
			if(arr[ch - 'a'] == -1) {	// arr 원소 값이 -1 인 경우에만 초기화
				arr[ch - 'a'] = i;
			}
		}
 
		for(int val : arr) {	// 배열 출력 커밋을 함으로써 우리는 for each 구문을 알 수 있다.
			System.out.print(val + " ");
		}
	}
}

// 2675번 //
import java.util.Scanner;

/**
 * 1 부터 10000까지의 검사한 뒤, 해당 수를 생성자로 하는 수가 있으면 그 수를 거르는 것
 * 
 */
public class Main1 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int Testcase = sc.nextInt();

        for (int i = 0; i < Testcase; i++) {

            int R = sc.nextInt();
            String S = sc.next(); /// nextLine을 쓰면 error!!! 공백까지 읽어 버리기 때문이다.

            for (int j = 0; j < S.length(); j++) {
                for (int k = 0; k < R; k++) { // R만큼 반복하여 처리
                    System.out.print(S.charAt(j)); // J값을 반복하였음
                }
            }
            System.out.println(); // 줄바꿈 출력
        }
    }
}


// 1157번 //
import java.util.Scanner;

/**
 * 1 부터 10000까지의 검사한 뒤, 해당 수를 생성자로 하는 수가 있으면 그 수를 거르는 것
 * 
 */
public class Main1 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] arr = new int[26]; //// 알파벳이 26개 이므로 결국 arr[0]은 A
        String s = sc.next();

        for (int i = 0; i < s.length(); i++) { // 입력해 있는 알파벳을 전체 반복 비교

            if ('A' <= s.charAt(i) && s.charAt(i) <= 'a') { //// 대문자 일때 증가
                arr[s.charAt(i) - 'A']++;
            } else { /// 소문자 일때 증가
                arr[s.charAt(i) - 'a']++;
            }
        }

        int max = -1; /// max의 최댓값 기본 설정
        char ch = '?'; /// 물음표 설정

        for (int i = 0; i < 26; i++) { // 최대로 반복해 있는 숫자 찾기

            if (arr[i] > max) { // 계속 크면 반복
                max = arr[i];
                ch = (char) (i + 65); // 대문자를 출력해야하므로 65를 더해준다.
            } else if (arr[i] == max) { // 최댓값이 같다 즉 겹치는게 2개면 ? 출력
                ch = '?';
            }

        }
        System.out.println(ch);
    }
}
